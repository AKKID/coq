DIGEST 0c3f610c37d80976ca6d135b04e3cb08
FTactics
R658:661 Poly <> <> lib
prf 937:942 <> silly1
R964:966 Coq.Init.Datatypes <> nat ind
R980:989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1003:1011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1017:1019 Coq.Init.Logic <> :type_scope:x_'='_x not
R1012:1012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1014:1014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1016:1016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1015:1015 Tactics <> o var
R1013:1013 Tactics <> n var
R1020:1020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1024:1024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 Tactics <> p var
R1021:1021 Tactics <> m var
R995:997 Coq.Init.Logic <> :type_scope:x_'='_x not
R990:990 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R992:992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R994:994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R993:993 Tactics <> o var
R991:991 Tactics <> n var
R998:998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1002:1002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1001:1001 Tactics <> p var
R999:999 Tactics <> n var
R976:978 Coq.Init.Logic <> :type_scope:x_'='_x not
R975:975 Tactics <> n var
R979:979 Tactics <> m var
prf 1548:1553 <> silly2
R1575:1577 Coq.Init.Datatypes <> nat ind
R1591:1600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1601:1601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1644:1653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1659:1661 Coq.Init.Logic <> :type_scope:x_'='_x not
R1654:1654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1656:1656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1658:1658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1657:1657 Tactics <> o var
R1655:1655 Tactics <> n var
R1662:1662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1666:1666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1665:1665 Tactics <> p var
R1663:1663 Tactics <> m var
R1616:1618 Coq.Init.Datatypes <> nat ind
R1627:1630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1636:1638 Coq.Init.Logic <> :type_scope:x_'='_x not
R1631:1631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1633:1633 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1635:1635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1634:1634 Tactics <> o var
R1632:1632 Tactics <> q var
R1639:1639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1643:1643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1642:1642 Tactics <> p var
R1640:1640 Tactics <> r var
R1623:1625 Coq.Init.Logic <> :type_scope:x_'='_x not
R1622:1622 Tactics <> q var
R1626:1626 Tactics <> r var
R1587:1589 Coq.Init.Logic <> :type_scope:x_'='_x not
R1586:1586 Tactics <> n var
R1590:1590 Tactics <> m var
prf 2177:2183 <> silly2a
R2201:2203 Coq.Init.Datatypes <> nat ind
R2225:2234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2235:2235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2282:2291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2295:2297 Coq.Init.Logic <> :type_scope:x_'='_x not
R2292:2292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2294:2294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2293:2293 Tactics <> n var
R2298:2298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2300:2300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2299:2299 Tactics <> m var
R2250:2252 Coq.Init.Datatypes <> nat ind
R2269:2272 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2276:2278 Coq.Init.Logic <> :type_scope:x_'='_x not
R2273:2273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2275:2275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2274:2274 Tactics <> q var
R2279:2279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2281:2281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2280:2280 Tactics <> r var
R2261:2263 Coq.Init.Logic <> :type_scope:x_'='_x not
R2256:2256 Poly <> ::'('_x_','_x_')' not
R2258:2258 Poly <> ::'('_x_','_x_')' not
R2260:2260 Poly <> ::'('_x_','_x_')' not
R2257:2257 Tactics <> q var
R2259:2259 Tactics <> q var
R2264:2264 Poly <> ::'('_x_','_x_')' not
R2266:2266 Poly <> ::'('_x_','_x_')' not
R2268:2268 Poly <> ::'('_x_','_x_')' not
R2265:2265 Tactics <> r var
R2267:2267 Tactics <> r var
R2217:2219 Coq.Init.Logic <> :type_scope:x_'='_x not
R2212:2212 Poly <> ::'('_x_','_x_')' not
R2214:2214 Poly <> ::'('_x_','_x_')' not
R2216:2216 Poly <> ::'('_x_','_x_')' not
R2213:2213 Tactics <> n var
R2215:2215 Tactics <> n var
R2220:2220 Poly <> ::'('_x_','_x_')' not
R2222:2222 Poly <> ::'('_x_','_x_')' not
R2224:2224 Poly <> ::'('_x_','_x_')' not
R2221:2221 Tactics <> m var
R2223:2223 Tactics <> m var
prf 2483:2490 <> silly_ex
R2499:2499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2545:2554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2569:2577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2584:2586 Coq.Init.Logic <> :type_scope:x_'='_x not
R2578:2581 Basics <> oddb def
R2587:2590 Basics <> true constr
R2562:2564 Coq.Init.Logic <> :type_scope:x_'='_x not
R2555:2559 Basics <> evenb def
R2565:2568 Basics <> true constr
R2524:2527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2538:2540 Coq.Init.Logic <> :type_scope:x_'='_x not
R2528:2531 Basics <> oddb def
R2534:2534 Coq.Init.Datatypes <> S constr
R2536:2536 Tactics <> n var
R2541:2544 Basics <> true constr
R2517:2519 Coq.Init.Logic <> :type_scope:x_'='_x not
R2510:2514 Basics <> evenb def
R2516:2516 Tactics <> n var
R2520:2523 Basics <> true constr
prf 2878:2892 <> silly3_firsttry
R2908:2910 Coq.Init.Datatypes <> nat ind
R2937:2946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2966:2968 Coq.Init.Logic <> :type_scope:x_'='_x not
R2947:2953 Basics <> beq_nat def
R2956:2956 Coq.Init.Datatypes <> S constr
R2959:2959 Coq.Init.Datatypes <> S constr
R2961:2961 Tactics <> n var
R2969:2972 Basics <> true constr
R2923:2925 Coq.Init.Logic <> :type_scope:x_'='_x not
R2919:2922 Basics <> true constr
R2926:2932 Basics <> beq_nat def
R2934:2934 Tactics <> n var
prf 3512:3524 <> rev_exercise1
R3543:3546 Poly <> list ind
R3548:3550 Coq.Init.Datatypes <> nat ind
R3569:3577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3580:3582 Coq.Init.Logic <> :type_scope:x_'='_x not
R3578:3579 Tactics <> l' var
R3583:3585 Poly <> rev def
R3587:3587 Tactics <> l var
R3560:3562 Coq.Init.Logic <> :type_scope:x_'='_x not
R3559:3559 Tactics <> l var
R3563:3565 Poly <> rev def
R3567:3568 Tactics <> l' var
R3639:3641 Poly <> rev def
R3664:3677 Poly <> rev_involutive thm
R3664:3677 Poly <> rev_involutive thm
def 4430:4445 <> trans_eq_example
R4471:4473 Coq.Init.Datatypes <> nat ind
R4495:4503 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4517:4525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4531:4533 Coq.Init.Logic <> :type_scope:x_'='_x not
R4526:4526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4528:4528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4530:4530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4529:4529 Tactics <> b var
R4527:4527 Tactics <> a var
R4534:4534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4536:4536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4538:4538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4537:4537 Tactics <> f var
R4535:4535 Tactics <> e var
R4509:4511 Coq.Init.Logic <> :type_scope:x_'='_x not
R4504:4504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4506:4506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4508:4508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4507:4507 Tactics <> d var
R4505:4505 Tactics <> c var
R4512:4512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4514:4514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4516:4516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4515:4515 Tactics <> f var
R4513:4513 Tactics <> e var
R4487:4489 Coq.Init.Logic <> :type_scope:x_'='_x not
R4482:4482 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4484:4484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4486:4486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4485:4485 Tactics <> b var
R4483:4483 Tactics <> a var
R4490:4490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4492:4492 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4494:4494 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4493:4493 Tactics <> d var
R4491:4491 Tactics <> c var
prf 4795:4802 <> trans_eq
R4831:4831 Tactics <> X var
R4842:4845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4851:4854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4856:4858 Coq.Init.Logic <> :type_scope:x_'='_x not
R4855:4855 Tactics <> n var
R4859:4859 Tactics <> o var
R4847:4849 Coq.Init.Logic <> :type_scope:x_'='_x not
R4846:4846 Tactics <> m var
R4850:4850 Tactics <> o var
R4838:4840 Coq.Init.Logic <> :type_scope:x_'='_x not
R4837:4837 Tactics <> n var
R4841:4841 Tactics <> m var
def 5114:5130 <> trans_eq_example'
R5156:5158 Coq.Init.Datatypes <> nat ind
R5180:5188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5202:5210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5216:5218 Coq.Init.Logic <> :type_scope:x_'='_x not
R5211:5211 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5213:5213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5215:5215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5214:5214 Tactics <> b var
R5212:5212 Tactics <> a var
R5219:5219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5221:5221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5223:5223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5222:5222 Tactics <> f var
R5220:5220 Tactics <> e var
R5194:5196 Coq.Init.Logic <> :type_scope:x_'='_x not
R5189:5189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5191:5191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5193:5193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5192:5192 Tactics <> d var
R5190:5190 Tactics <> c var
R5197:5197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5199:5199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5201:5201 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5200:5200 Tactics <> f var
R5198:5198 Tactics <> e var
R5172:5174 Coq.Init.Logic <> :type_scope:x_'='_x not
R5167:5167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5169:5169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5171:5171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5170:5170 Tactics <> b var
R5168:5168 Tactics <> a var
R5175:5175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5177:5177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5179:5179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5178:5178 Tactics <> d var
R5176:5176 Tactics <> c var
R5694:5694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5696:5696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5698:5698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5676:5683 Tactics <> trans_eq thm
R5694:5694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5696:5696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5698:5698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5676:5683 Tactics <> trans_eq thm
def 6030:6046 <> trans_eq_exercise
R6068:6070 Coq.Init.Datatypes <> nat ind
R6095:6103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6115:6123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6124:6124 Coq.Init.Logic <> :type_scope:x_'='_x not
R6130:6134 Coq.Init.Logic <> :type_scope:x_'='_x not
R6145:6145 Coq.Init.Logic <> :type_scope:x_'='_x not
R6126:6128 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6125:6125 Tactics <> n var
R6129:6129 Tactics <> p var
R6135:6142 Basics <> minustwo def
R6144:6144 Tactics <> o var
R6104:6104 Coq.Init.Logic <> :type_scope:x_'='_x not
R6110:6113 Coq.Init.Logic <> :type_scope:x_'='_x not
R6106:6108 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6105:6105 Tactics <> n var
R6109:6109 Tactics <> p var
R6114:6114 Tactics <> m var
R6080:6083 Coq.Init.Logic <> :type_scope:x_'='_x not
R6094:6094 Coq.Init.Logic <> :type_scope:x_'='_x not
R6079:6079 Tactics <> m var
R6084:6091 Basics <> minustwo def
R6093:6093 Tactics <> o var
R6189:6196 Tactics <> trans_eq thm
R6189:6196 Tactics <> trans_eq thm
prf 7724:7734 <> S_injective
R7752:7754 Coq.Init.Datatypes <> nat ind
R7769:7774 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7776:7778 Coq.Init.Logic <> :type_scope:x_'='_x not
R7775:7775 Tactics <> n var
R7779:7779 Tactics <> m var
R7763:7765 Coq.Init.Logic <> :type_scope:x_'='_x not
R7760:7760 Coq.Init.Datatypes <> S constr
R7762:7762 Tactics <> n var
R7766:7766 Coq.Init.Datatypes <> S constr
R7768:7768 Tactics <> m var
prf 8274:8286 <> inversion_ex1
R8306:8308 Coq.Init.Datatypes <> nat ind
R8329:8334 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8338:8340 Coq.Init.Logic <> :type_scope:x_'='_x not
R8335:8335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8337:8337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8336:8336 Tactics <> n var
R8341:8341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8343:8343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8342:8342 Tactics <> m var
R8320:8322 Coq.Init.Logic <> :type_scope:x_'='_x not
R8314:8314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8316:8317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8319:8319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8318:8318 Tactics <> m var
R8315:8315 Tactics <> n var
R8323:8323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8325:8326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8328:8328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8327:8327 Tactics <> o var
R8324:8324 Tactics <> o var
prf 8501:8513 <> inversion_ex2
R8531:8533 Coq.Init.Datatypes <> nat ind
R8548:8553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8555:8557 Coq.Init.Logic <> :type_scope:x_'='_x not
R8554:8554 Tactics <> n var
R8558:8558 Tactics <> m var
R8542:8544 Coq.Init.Logic <> :type_scope:x_'='_x not
R8539:8539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8541:8541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8540:8540 Tactics <> n var
R8545:8545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8547:8547 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8546:8546 Tactics <> m var
def 8680:8692 <> inversion_ex3
R8723:8723 Tactics <> X var
R8733:8736 Poly <> list ind
R8738:8738 Tactics <> X var
R8764:8769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8785:8790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8792:8794 Coq.Init.Logic <> :type_scope:x_'='_x not
R8791:8791 Tactics <> x var
R8795:8795 Tactics <> y var
R8776:8778 Coq.Init.Logic <> :type_scope:x_'='_x not
R8771:8774 Poly <> ::x_'::'_x not
R8770:8770 Tactics <> y var
R8775:8775 Tactics <> l var
R8780:8783 Poly <> ::x_'::'_x not
R8779:8779 Tactics <> x var
R8784:8784 Tactics <> j var
R8755:8757 Coq.Init.Logic <> :type_scope:x_'='_x not
R8745:8748 Poly <> ::x_'::'_x not
R8744:8744 Tactics <> x var
R8750:8753 Poly <> ::x_'::'_x not
R8749:8749 Tactics <> y var
R8754:8754 Tactics <> l var
R8759:8762 Poly <> ::x_'::'_x not
R8758:8758 Tactics <> z var
R8763:8763 Tactics <> j var
prf 9065:9075 <> beq_nat_0_l
R9110:9113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9115:9117 Coq.Init.Logic <> :type_scope:x_'='_x not
R9114:9114 Tactics <> n var
R9103:9105 Coq.Init.Logic <> :type_scope:x_'='_x not
R9092:9098 Basics <> beq_nat def
R9102:9102 Tactics <> n var
R9106:9109 Basics <> true constr
prf 10024:10036 <> inversion_ex4
R10052:10054 Coq.Init.Datatypes <> nat ind
R10067:10072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10078:10080 Coq.Init.Logic <> :type_scope:x_'='_x not
R10074:10076 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10063:10065 Coq.Init.Logic <> :type_scope:x_'='_x not
R10060:10060 Coq.Init.Datatypes <> S constr
R10062:10062 Tactics <> n var
R10066:10066 Coq.Init.Datatypes <> O constr
prf 10142:10154 <> inversion_ex5
R10172:10174 Coq.Init.Datatypes <> nat ind
R10192:10197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10201:10203 Coq.Init.Logic <> :type_scope:x_'='_x not
R10198:10198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10200:10200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10199:10199 Tactics <> n var
R10204:10204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10206:10206 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10205:10205 Tactics <> m var
R10185:10187 Coq.Init.Logic <> :type_scope:x_'='_x not
R10180:10184 Basics <> false constr
R10188:10191 Basics <> true constr
def 10718:10730 <> inversion_ex6
R10787:10787 Tactics <> X var
R10797:10800 Poly <> list ind
R10802:10802 Tactics <> X var
R10824:10829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10845:10850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10852:10854 Coq.Init.Logic <> :type_scope:x_'='_x not
R10851:10851 Tactics <> x var
R10855:10855 Tactics <> z var
R10836:10838 Coq.Init.Logic <> :type_scope:x_'='_x not
R10831:10834 Poly <> ::x_'::'_x not
R10830:10830 Tactics <> y var
R10835:10835 Tactics <> l var
R10840:10843 Poly <> ::x_'::'_x not
R10839:10839 Tactics <> z var
R10844:10844 Tactics <> j var
R10819:10821 Coq.Init.Logic <> :type_scope:x_'='_x not
R10809:10812 Poly <> ::x_'::'_x not
R10808:10808 Tactics <> x var
R10814:10817 Poly <> ::x_'::'_x not
R10813:10813 Tactics <> y var
R10818:10818 Tactics <> l var
R10822:10823 Poly <> ::'['_']' not
prf 12032:12038 <> f_equal
R12067:12070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12071:12071 Tactics <> B var
R12066:12066 Tactics <> A var
R12080:12080 Tactics <> A var
R12091:12094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12098:12100 Coq.Init.Logic <> :type_scope:x_'='_x not
R12095:12095 Tactics <> f var
R12097:12097 Tactics <> x var
R12101:12101 Tactics <> f var
R12103:12103 Tactics <> y var
R12087:12089 Coq.Init.Logic <> :type_scope:x_'='_x not
R12086:12086 Tactics <> x var
R12090:12090 Tactics <> y var
prf 12606:12610 <> S_inj
R12628:12630 Coq.Init.Datatypes <> nat ind
R12638:12641 Basics <> bool ind
R12673:12682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12694:12696 Coq.Init.Logic <> :type_scope:x_'='_x not
R12683:12689 Basics <> beq_nat def
R12693:12693 Tactics <> m var
R12691:12691 Tactics <> n var
R12697:12697 Tactics <> b var
R12669:12671 Coq.Init.Logic <> :type_scope:x_'='_x not
R12650:12656 Basics <> beq_nat def
R12665:12665 Coq.Init.Datatypes <> S constr
R12667:12667 Tactics <> m var
R12659:12659 Coq.Init.Datatypes <> S constr
R12661:12661 Tactics <> n var
R12672:12672 Tactics <> b var
prf 13535:13541 <> silly3'
R13557:13559 Coq.Init.Datatypes <> nat ind
R13565:13565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13614:13620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13639:13645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13650:13652 Coq.Init.Logic <> :type_scope:x_'='_x not
R13646:13649 Basics <> true constr
R13653:13659 Basics <> beq_nat def
R13662:13662 Coq.Init.Datatypes <> S constr
R13665:13665 Coq.Init.Datatypes <> S constr
R13667:13667 Tactics <> n var
R13625:13627 Coq.Init.Logic <> :type_scope:x_'='_x not
R13621:13624 Basics <> true constr
R13628:13634 Basics <> beq_nat def
R13636:13636 Tactics <> n var
R13584:13587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13607:13609 Coq.Init.Logic <> :type_scope:x_'='_x not
R13588:13594 Basics <> beq_nat def
R13597:13597 Coq.Init.Datatypes <> S constr
R13600:13600 Coq.Init.Datatypes <> S constr
R13602:13602 Tactics <> n var
R13610:13613 Basics <> true constr
R13577:13579 Coq.Init.Logic <> :type_scope:x_'='_x not
R13566:13572 Basics <> beq_nat def
R13574:13574 Tactics <> n var
R13580:13583 Basics <> true constr
prf 14546:14563 <> plus_n_n_injective
R14597:14605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14607:14609 Coq.Init.Logic <> :type_scope:x_'='_x not
R14606:14606 Tactics <> n var
R14610:14610 Tactics <> m var
R14589:14591 Coq.Init.Logic <> :type_scope:x_'='_x not
R14585:14587 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14584:14584 Tactics <> n var
R14588:14588 Tactics <> n var
R14593:14595 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14592:14592 Tactics <> m var
R14596:14596 Tactics <> m var
R14867:14875 Induction <> plus_n_Sm prfax
R14867:14875 Induction <> plus_n_Sm prfax
R14867:14875 Induction <> plus_n_Sm prfax
R14895:14903 Induction <> plus_n_Sm prfax
R14895:14903 Induction <> plus_n_Sm prfax
R14895:14903 Induction <> plus_n_Sm prfax
prf 16066:16088 <> double_injective_FAILED
R16128:16136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16138:16140 Coq.Init.Logic <> :type_scope:x_'='_x not
R16137:16137 Tactics <> n var
R16141:16141 Tactics <> m var
R16117:16119 Coq.Init.Logic <> :type_scope:x_'='_x not
R16109:16114 Induction <> double def
R16116:16116 Tactics <> n var
R16120:16125 Induction <> double def
R16127:16127 Tactics <> m var
R16421:16427 Tactics <> f_equal thm
R16421:16427 Tactics <> f_equal thm
prf 18663:18678 <> double_injective
R18718:18726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18728:18730 Coq.Init.Logic <> :type_scope:x_'='_x not
R18727:18727 Tactics <> n var
R18731:18731 Tactics <> m var
R18707:18709 Coq.Init.Logic <> :type_scope:x_'='_x not
R18699:18704 Induction <> double def
R18706:18706 Tactics <> n var
R18710:18715 Induction <> double def
R18717:18717 Tactics <> m var
R19604:19610 Tactics <> f_equal thm
R19604:19610 Tactics <> f_equal thm
prf 20524:20535 <> beq_nat_true
R20573:20576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20578:20580 Coq.Init.Logic <> :type_scope:x_'='_x not
R20577:20577 Tactics <> n var
R20581:20581 Tactics <> m var
R20566:20568 Coq.Init.Logic <> :type_scope:x_'='_x not
R20555:20561 Basics <> beq_nat def
R20565:20565 Tactics <> m var
R20563:20563 Tactics <> n var
R20569:20572 Basics <> true constr
prf 21556:21584 <> double_injective_take2_FAILED
R21624:21632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21634:21636 Coq.Init.Logic <> :type_scope:x_'='_x not
R21633:21633 Tactics <> n var
R21637:21637 Tactics <> m var
R21613:21615 Coq.Init.Logic <> :type_scope:x_'='_x not
R21605:21610 Induction <> double def
R21612:21612 Tactics <> n var
R21616:21621 Induction <> double def
R21623:21623 Tactics <> m var
R21917:21923 Tactics <> f_equal thm
R21917:21923 Tactics <> f_equal thm
prf 22859:22880 <> double_injective_take2
R22920:22928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22930:22932 Coq.Init.Logic <> :type_scope:x_'='_x not
R22929:22929 Tactics <> n var
R22933:22933 Tactics <> m var
R22909:22911 Coq.Init.Logic <> :type_scope:x_'='_x not
R22901:22906 Induction <> double def
R22908:22908 Tactics <> n var
R22912:22917 Induction <> double def
R22919:22919 Tactics <> m var
R23396:23402 Tactics <> f_equal thm
R23396:23402 Tactics <> f_equal thm
prf 25602:25612 <> beq_id_true
R25647:25650 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25652:25654 Coq.Init.Logic <> :type_scope:x_'='_x not
R25651:25651 Tactics <> x var
R25655:25655 Tactics <> y var
R25640:25642 Coq.Init.Logic <> :type_scope:x_'='_x not
R25630:25635 Lists <> beq_id def
R25639:25639 Tactics <> y var
R25637:25637 Tactics <> x var
R25643:25646 Basics <> true constr
R25716:25718 Coq.Init.Logic <> :type_scope:x_'='_x not
R25716:25718 Coq.Init.Logic <> :type_scope:x_'='_x not
R25731:25742 Tactics <> beq_nat_true thm
R25731:25742 Tactics <> beq_nat_true thm
prf 25900:25919 <> nth_error_after_last
R25934:25936 Coq.Init.Datatypes <> nat ind
R25955:25958 Poly <> list ind
R25960:25960 Tactics <> X var
R25981:25989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26003:26005 Coq.Init.Logic <> :type_scope:x_'='_x not
R25990:25998 Poly <> nth_error def
R26002:26002 Tactics <> n var
R26000:26000 Tactics <> l var
R26006:26009 Poly <> None constr
R25977:25979 Coq.Init.Logic <> :type_scope:x_'='_x not
R25969:25974 Poly <> length def
R25976:25976 Tactics <> l var
R25980:25980 Tactics <> n var
prf 26553:26564 <> mult_distr_r
R26581:26583 Coq.Init.Datatypes <> nat ind
R26597:26599 Coq.Init.Logic <> :type_scope:x_'='_x not
R26586:26586 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26592:26595 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26588:26590 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26587:26587 Tactics <> n var
R26591:26591 Tactics <> m var
R26596:26596 Tactics <> p var
R26605:26607 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26601:26603 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26600:26600 Tactics <> n var
R26604:26604 Tactics <> p var
R26609:26611 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26608:26608 Tactics <> m var
R26612:26612 Tactics <> p var
R26734:26743 Induction <> plus_assoc prfax
R26734:26743 Induction <> plus_assoc prfax
R26734:26743 Induction <> plus_assoc prfax
prf 26778:26787 <> mult_assoc
R26805:26807 Coq.Init.Datatypes <> nat ind
R26821:26823 Coq.Init.Logic <> :type_scope:x_'='_x not
R26811:26814 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26820:26820 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26810:26810 Tactics <> n var
R26816:26818 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26815:26815 Tactics <> m var
R26819:26819 Tactics <> p var
R26829:26831 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26825:26827 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26824:26824 Tactics <> n var
R26828:26828 Tactics <> m var
R26832:26832 Tactics <> p var
R26933:26944 Tactics <> mult_distr_r thm
R26933:26944 Tactics <> mult_distr_r thm
R26933:26944 Tactics <> mult_distr_r thm
def 26994:26999 <> square
R27007:27009 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27006:27006 Tactics <> n var
R27010:27010 Tactics <> n var
R27019:27024 Tactics <> square def
prf 27094:27104 <> square_mult
R27134:27136 Coq.Init.Logic <> :type_scope:x_'='_x not
R27120:27125 Tactics <> square def
R27129:27131 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27128:27128 Tactics <> n var
R27132:27132 Tactics <> m var
R27145:27147 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27137:27142 Tactics <> square def
R27144:27144 Tactics <> n var
R27148:27153 Tactics <> square def
R27155:27155 Tactics <> m var
R27472:27477 Tactics <> square def
R27802:27811 Tactics <> mult_assoc thm
R27802:27811 Tactics <> mult_assoc thm
R27802:27811 Tactics <> mult_assoc thm
R27837:27839 Coq.Init.Logic <> :type_scope:x_'='_x not
R27833:27835 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27829:27831 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27845:27847 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27841:27843 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27837:27839 Coq.Init.Logic <> :type_scope:x_'='_x not
R27833:27835 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27829:27831 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27845:27847 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27841:27843 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27864:27872 Induction <> mult_comm prfax
R27864:27872 Induction <> mult_comm prfax
R27864:27872 Induction <> mult_comm prfax
R27883:27892 Tactics <> mult_assoc thm
R27883:27892 Tactics <> mult_assoc thm
R27883:27892 Tactics <> mult_assoc thm
R27931:27940 Tactics <> mult_assoc thm
R27931:27940 Tactics <> mult_assoc thm
R27931:27940 Tactics <> mult_assoc thm
def 28328:28330 <> foo
R28336:28338 Coq.Init.Datatypes <> nat ind
prf 28551:28562 <> silly_fact_1
R28585:28587 Coq.Init.Logic <> :type_scope:x_'='_x not
R28581:28583 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28576:28578 Tactics <> foo def
R28580:28580 Tactics <> m var
R28599:28601 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28588:28590 Tactics <> foo def
R28594:28596 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28593:28593 Tactics <> m var
def 28832:28834 <> bar
R28849:28849 Tactics <> x var
R28860:28860 Coq.Init.Datatypes <> O constr
R28871:28871 Coq.Init.Datatypes <> S constr
prf 28945:28963 <> silly_fact_2_FAILED
R28986:28988 Coq.Init.Logic <> :type_scope:x_'='_x not
R28982:28984 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28977:28979 Tactics <> bar def
R28981:28981 Tactics <> m var
R29000:29002 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28989:28991 Tactics <> bar def
R28995:28997 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28994:28994 Tactics <> m var
prf 29994:30005 <> silly_fact_2
R30028:30030 Coq.Init.Logic <> :type_scope:x_'='_x not
R30024:30026 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30019:30021 Tactics <> bar def
R30023:30023 Tactics <> m var
R30042:30044 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30031:30033 Tactics <> bar def
R30037:30039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30036:30036 Tactics <> m var
prf 30395:30407 <> silly_fact_2'
R30430:30432 Coq.Init.Logic <> :type_scope:x_'='_x not
R30426:30428 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30421:30423 Tactics <> bar def
R30425:30425 Tactics <> m var
R30444:30446 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30433:30435 Tactics <> bar def
R30439:30441 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30438:30438 Tactics <> m var
R30478:30480 Tactics <> bar def
def 31124:31131 <> sillyfun
R31138:31140 Coq.Init.Datatypes <> nat ind
R31145:31148 Basics <> bool ind
R31158:31164 Basics <> beq_nat def
R31166:31166 Tactics <> n var
R31191:31197 Basics <> beq_nat def
R31199:31199 Tactics <> n var
R31221:31225 Basics <> false constr
R31208:31212 Basics <> false constr
R31175:31179 Basics <> false constr
prf 31237:31250 <> sillyfun_false
R31266:31268 Coq.Init.Datatypes <> nat ind
R31284:31286 Coq.Init.Logic <> :type_scope:x_'='_x not
R31274:31281 Tactics <> sillyfun def
R31283:31283 Tactics <> n var
R31287:31291 Basics <> false constr
R31320:31327 Tactics <> sillyfun def
R31342:31348 Basics <> beq_nat def
R31342:31348 Basics <> beq_nat def
R31442:31448 Basics <> beq_nat def
R31442:31448 Basics <> beq_nat def
def 32339:32343 <> split
R32363:32366 Poly <> list ind
R32370:32370 Poly <> :type_scope:x_'*'_x not
R32369:32369 Tactics <> X var
R32371:32371 Tactics <> Y var
R32392:32392 Poly <> :type_scope:x_'*'_x not
R32399:32403 Poly <> :type_scope:x_'*'_x not
R32410:32410 Poly <> :type_scope:x_'*'_x not
R32393:32396 Poly <> list ind
R32398:32398 Tactics <> X var
R32404:32407 Poly <> list ind
R32409:32409 Tactics <> Y var
R32423:32423 Tactics <> l var
R32434:32435 Poly <> ::'['_']' not
R32440:32440 Poly <> ::'('_x_','_x_')' not
R32443:32444 Poly <> ::'('_x_','_x_')' not
R32447:32447 Poly <> ::'('_x_','_x_')' not
R32441:32442 Poly <> ::'['_']' not
R32445:32446 Poly <> ::'['_']' not
R32459:32462 Poly <> ::x_'::'_x not
R32453:32453 Poly <> ::'('_x_','_x_')' not
R32455:32456 Poly <> ::'('_x_','_x_')' not
R32458:32458 Poly <> ::'('_x_','_x_')' not
R32480:32484 Tactics <> split def
R32501:32501 Poly <> ::'('_x_','_x_')' not
R32504:32505 Poly <> ::'('_x_','_x_')' not
R32508:32508 Poly <> ::'('_x_','_x_')' not
R32513:32513 Poly <> ::'('_x_','_x_')' not
R32521:32522 Poly <> ::'('_x_','_x_')' not
R32530:32530 Poly <> ::'('_x_','_x_')' not
R32515:32518 Poly <> ::x_'::'_x not
R32524:32527 Poly <> ::x_'::'_x not
prf 32640:32652 <> combine_split
R32672:32675 Poly <> list ind
R32679:32681 Poly <> :type_scope:x_'*'_x not
R32678:32678 Tactics <> X var
R32682:32682 Tactics <> Y var
R32713:32718 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32732:32734 Coq.Init.Logic <> :type_scope:x_'='_x not
R32719:32725 Poly <> combine def
R32730:32731 Tactics <> l2 var
R32727:32728 Tactics <> l1 var
R32735:32735 Tactics <> l var
R32702:32704 Coq.Init.Logic <> :type_scope:x_'='_x not
R32695:32699 Tactics <> split def
R32701:32701 Tactics <> l var
R32705:32705 Poly <> ::'('_x_','_x_')' not
R32708:32709 Poly <> ::'('_x_','_x_')' not
R32712:32712 Poly <> ::'('_x_','_x_')' not
R32706:32707 Tactics <> l1 var
R32710:32711 Tactics <> l2 var
R32864:32868 Tactics <> split def
R32864:32868 Tactics <> split def
R32947:32949 Coq.Init.Logic <> :type_scope:x_'='_x not
R32934:32940 Poly <> combine def
R32947:32949 Coq.Init.Logic <> :type_scope:x_'='_x not
R32934:32940 Poly <> combine def
def 33299:33307 <> sillyfun1
R33314:33316 Coq.Init.Datatypes <> nat ind
R33321:33324 Basics <> bool ind
R33334:33340 Basics <> beq_nat def
R33342:33342 Tactics <> n var
R33366:33372 Basics <> beq_nat def
R33374:33374 Tactics <> n var
R33395:33399 Basics <> false constr
R33383:33386 Basics <> true constr
R33351:33354 Basics <> true constr
prf 33658:33677 <> sillyfun1_odd_FAILED
R33693:33695 Coq.Init.Datatypes <> nat ind
R33722:33730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33737:33739 Coq.Init.Logic <> :type_scope:x_'='_x not
R33731:33734 Basics <> oddb def
R33736:33736 Tactics <> n var
R33740:33743 Basics <> true constr
R33715:33717 Coq.Init.Logic <> :type_scope:x_'='_x not
R33704:33712 Tactics <> sillyfun1 def
R33714:33714 Tactics <> n var
R33718:33721 Basics <> true constr
R33775:33783 Tactics <> sillyfun1 def
R33804:33810 Basics <> beq_nat def
R33804:33810 Basics <> beq_nat def
prf 34660:34672 <> sillyfun1_odd
R34688:34690 Coq.Init.Datatypes <> nat ind
R34717:34725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34732:34734 Coq.Init.Logic <> :type_scope:x_'='_x not
R34726:34729 Basics <> oddb def
R34731:34731 Tactics <> n var
R34735:34738 Basics <> true constr
R34710:34712 Coq.Init.Logic <> :type_scope:x_'='_x not
R34699:34707 Tactics <> sillyfun1 def
R34709:34709 Tactics <> n var
R34713:34716 Basics <> true constr
R34770:34778 Tactics <> sillyfun1 def
R34799:34805 Basics <> beq_nat def
R34799:34805 Basics <> beq_nat def
R35054:35065 Tactics <> beq_nat_true thm
R35054:35065 Tactics <> beq_nat_true thm
R35352:35358 Basics <> beq_nat def
R35352:35358 Basics <> beq_nat def
R35418:35429 Tactics <> beq_nat_true thm
R35418:35429 Tactics <> beq_nat_true thm
prf 35593:35614 <> bool_fn_applied_thrice
R35636:35639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35640:35643 Basics <> bool ind
R35632:35635 Basics <> bool ind
R35651:35654 Basics <> bool ind
R35671:35673 Coq.Init.Logic <> :type_scope:x_'='_x not
R35660:35660 Tactics <> f var
R35663:35663 Tactics <> f var
R35666:35666 Tactics <> f var
R35668:35668 Tactics <> b var
R35674:35674 Tactics <> f var
R35676:35676 Tactics <> b var
R35741:35744 Basics <> true constr
R35741:35744 Basics <> true constr
R35877:35881 Basics <> false constr
R35877:35881 Basics <> false constr
prf 38270:38280 <> beq_nat_sym
R38298:38300 Coq.Init.Datatypes <> nat ind
R38317:38319 Coq.Init.Logic <> :type_scope:x_'='_x not
R38306:38312 Basics <> beq_nat def
R38316:38316 Tactics <> m var
R38314:38314 Tactics <> n var
R38320:38326 Basics <> beq_nat def
R38330:38330 Tactics <> n var
R38328:38328 Tactics <> m var
prf 38891:38903 <> beq_nat_trans
R38941:38946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38965:38970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38982:38984 Coq.Init.Logic <> :type_scope:x_'='_x not
R38971:38977 Basics <> beq_nat def
R38981:38981 Tactics <> p var
R38979:38979 Tactics <> n var
R38985:38988 Basics <> true constr
R38958:38960 Coq.Init.Logic <> :type_scope:x_'='_x not
R38947:38953 Basics <> beq_nat def
R38957:38957 Tactics <> p var
R38955:38955 Tactics <> m var
R38961:38964 Basics <> true constr
R38934:38936 Coq.Init.Logic <> :type_scope:x_'='_x not
R38923:38929 Basics <> beq_nat def
R38933:38933 Tactics <> m var
R38931:38931 Tactics <> n var
R38937:38940 Basics <> true constr
def 40140:40162 <> split_combine_statement
prf 40336:40348 <> split_combine
R40352:40374 Tactics <> split_combine_statement prfax
prf 40592:40606 <> filter_exercise
R40637:40640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40641:40644 Basics <> bool ind
R40636:40636 Tactics <> X var
R40681:40681 Tactics <> X var
R40692:40695 Poly <> list ind
R40697:40697 Tactics <> X var
R40729:40737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40744:40746 Coq.Init.Logic <> :type_scope:x_'='_x not
R40738:40741 Tactics <> test var
R40743:40743 Tactics <> x var
R40747:40750 Basics <> true constr
R40719:40721 Coq.Init.Logic <> :type_scope:x_'='_x not
R40706:40711 Poly <> filter def
R40718:40718 Tactics <> l var
R40713:40716 Tactics <> test var
R40723:40726 Poly <> ::x_'::'_x not
R40722:40722 Tactics <> x var
R40727:40728 Tactics <> lf var
